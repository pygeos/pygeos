name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      GEOS_VERSION: "3.9.1"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0
        env:
          CIBW_BUILD: cp38-*
          CIBW_ENVIRONMENT_LINUX: GEOS_VERSION=${{ env.GEOS_VERSION }} GEOS_INSTALL=${{ github.workspace }}/geos GEOS_BUILD=${{ github.workspace }}/geosbuild GEOS_CONFIG=${{ github.workspace }}/geos/bin/geos-config
          CIBW_ENVIRONMENT_MACOS: GEOS_VERSION=${{ env.GEOS_VERSION }} GEOS_INSTALL=${{ github.workspace }}/geos GEOS_BUILD=${{ github.workspace }}/geosbuild GEOS_CONFIG=${{ github.workspace }}/geosbuild/geos-${{ env.GEOS_VERSION }}/build/bin/geos-config
          CIBW_ENVIRONMENT_WINDOWS: GEOS_VERSION=${{ env.GEOS_VERSION }} GEOS_INSTALL=${{ github.workspace }}\geos-${{ env.GEOS_VERSION }} GEOS_LIBRARY_PATH=${{ github.workspace }}\\geos-${{ env.GEOS_VERSION }}\\lib GEOS_INCLUDE_PATH=${{ github.workspace }}\\geos-${{ env.GEOS_VERSION }}\\include
          CIBW_BEFORE_ALL_LINUX: |
            pip install cmake
            ./ci/install_geos.sh
          CIBW_BEFORE_ALL_MACOS: |
            pip install cmake
            ./ci/install_geos.sh
          CIBW_BEFORE_ALL_WINDOWS: |
            pip install cmake
            ./ci/install_geos.cmd
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest pygeos
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          retention-days: 5
