name: Windows

on: [push, pull_request]

jobs:
  TestLinux:
    name: Python ${{ matrix.python }} (GEOS ${{ matrix.geos }}, numpy ${{ matrix.numpy || 'latest' }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        archs: [auto32, auto64]
        include:
          # 2017
          - python: 3.6
            geos: 3.6.4
            numpy: 1.13.3
          # 2018
          - python: 3.7
            geos: 3.7.3
            numpy: 1.15.4
          # 2019
          - python: 3.8
            geos: 3.8.2
            numpy: 1.17.5
          # 2020
          - python: 3.9
            geos: 3.9.1
            numpy: 1.19.5
          # # dev build is disabled; install_geos.cmd doesn't have this option (yet?)
          # - python: 3.9
          #   geos: main

    env:
      GEOS_VERSION: ${{ matrix.geos }}
      GEOS_INSTALL: ${{ github.workspace }}\geos-${{ matrix.geos }}
      GEOS_LIBRARY_PATH: ${{ github.workspace }}\geos-${{ matrix.geos }}\lib
      GEOS_INCLUDE_PATH: ${{ github.workspace }}\geos-${{ matrix.geos }}\include

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Cache GEOS build
        uses: actions/cache@v2
        with:
          path: |
            geos-${{ env.GEOS_VERSION }}
          key: ${{ matrix.os }}-${{ matrix.archs }}-2

      - name: Activate MSVC 32-bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
        if: ${{ matrix.os == 'windows-2019' && matrix.archs == 'auto32' }}

      - name: Activate MSVC 64-bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
        if: ${{ matrix.os == 'windows-2019' && matrix.archs == 'auto64' }}

      - name: Install GEOS
        run: ".\ci\install_geos.cmd"

      - name: Install python dependencies
        shell: bash
        run: |
          pip install --disable-pip-version-check --upgrade pip
          pip install --upgrade wheel
          if [ "$GEOS_VERSION" = "main" ]; then
            pip install --upgrade --pre Cython numpy pytest;
          else
            pip install --upgrade Cython numpy==${{ matrix.numpy }} pytest;
          fi
          pip list

      - name: Set environment variables
        run: echo "${{ env.GEOS_INSTALL }}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build PyGEOS
        shell: bash
        run: |
          python setup.py build_ext --inplace
          pip install --no-deps -e .

      - name: Run tests
        shell: bash
        continue-on-error: ${{ matrix.geos == 'main' }}
        run: pytest pygeos
